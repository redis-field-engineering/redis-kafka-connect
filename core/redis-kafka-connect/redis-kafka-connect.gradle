/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2021-2023 The Redis Kafka Connect authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
dependencies {
    implementation group: 'com.redis', name: 'lettucemod', version: lettucemodVersion
    implementation group: 'com.redis', name: 'spring-batch-redis-core', version: springBatchRedisVersion
    implementation 'org.apache.commons:commons-pool2'
    implementation 'org.slf4j:slf4j-api'
    compileOnly 'org.apache.kafka:connect-api'
    compileOnly 'org.apache.kafka:connect-json'
    testImplementation 'org.apache.kafka:connect-api'
    testImplementation 'org.apache.kafka:connect-json'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.slf4j:slf4j-simple'
    testImplementation group: 'com.redis', name: 'spring-batch-redis-test', version: springBatchRedisVersion
}

eclipse {
    project {
        name = 'redis-kafka-connect-core'
    }
}

jar.finalizedBy shadowJar

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    enableRelocation true
    relocationPrefix "com.redis.kafka.connect.shaded"
    relocate 'org.springframework.batch.core', 'org.springframework.batch.core'
    mergeServiceFiles()
}

def archiveFilename = "redis-redis-kafka-connect"
def releaseDate = java.time.format.DateTimeFormatter.ISO_LOCAL_DATE.format(java.time.LocalDateTime.now())

tasks.register('prepareConfluentArchive', Copy) {
    group = "Confluent"
    description = "Prepares the Confluent archive file for Confluent Hub"
    dependsOn tasks.shadowJar
    
    def baseDir = "$archiveFilename-${project.version}"
    from('config/archive/manifest.json') {
        expand(projectVersion: "${project.version}", releaseDate: "${releaseDate}")
    }
    from('config/archive/assets') {
        into 'assets'
    }
    from(layout.buildDirectory.dir('libs')) {
        include "${project.name}-${project.version}-all.jar"
        into 'lib'
    }
    from('../..') {
        include 'README.adoc'
        include 'LICENSE'
        into 'doc'
    }
    into layout.buildDirectory.dir("confluentArchive/${baseDir}")
}

tasks.register('createConfluentArchive', Zip) {
    group = "Confluent"
    description = "Creates the Confluent archive file to be released to Confluent Hub"
    dependsOn tasks.prepareConfluentArchive
    from(layout.buildDirectory.dir('confluentArchive'))
    archiveBaseName = ""
    archiveAppendix = archiveFilename
    archiveVersion.set(project.version.toString())
    destinationDirectory = layout.buildDirectory.dir('confluent')
}

build.finalizedBy createConfluentArchive
